name: Will it blend?

on: [push]

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    name: Linter os ${{ matrix.os }}, Python ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The Github editor is 127 chars wide
        flake8 . --count --statistics --config=./setup.cfg
  build:
    runs-on: ${{ matrix.os }}
    name: Launch check os ${{ matrix.os }}, Python ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
    - name: Install google key for translations
      env:
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        CLIENT_EMAIL: ${{ secrets.CLIENT_EMAIL }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_CERT_URL: ${{ secrets.CLIENT_CERT_URL }}
      run: |
        if ! [ -f friday-trans-key.json ]; then python create_trans_key.py; fi
    - name: Test with pytest
      env:
        TOKENTEST: ${{ secrets.TOKENTEST }}
        DATABASE: ${{ secrets.DATABASE }}
        DATABASETEST: ${{ secrets.DATABASETEST }}
        DBUSER: ${{ secrets.DBUSER }}
        DBPASS: ${{ secrets.DBPASS }}
        DBHOST: ${{ secrets.DBHOST }}
        WEBHOOKSPAM: ${{ secrets.WEBHOOKSPAM }}
        WEBHOOKISSUES: ${{ secrets.WEBHOOKISSUES }}
        WEBHOOKINFO: ${{ secrets.WEBHOOKINFO }}
        WEBHOOKERRORS: ${{ secrets.WEBHOOKERRORS }}
        WEBHOOKCHAT: ${{ secrets.WEBHOOKCHAT }}
        WEBHOOKJOIN: ${{ secrets.WEBHOOKJOIN }}
      run: |
        pytest