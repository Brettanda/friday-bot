version: "3"
services:
  bot:
    build: .
    container_name: bot
    depends_on:
      db:
        condition: service_healthy
      lavalink:
        condition: service_healthy
    restart: unless-stopped
    env_file: .env
    environment:
      # - DBURL=postgresql://fridaylocal:fridaylocal@db:5432/fridaylocal
      - LAVALINKUSHOST=lavalink
      - LAVALINKUSPORT=2333
    volumes:
      - .:/usr/src/app
      - /home/certs/:/home/certs/
    ports:
      - 5678:5678
      - 443:443
      - 5000:5000
    networks:
      - fridaybot
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: 2000M
    dns:
      - 1.1.1.2
      - 1.0.0.2
    healthcheck:
      test: [ "CMD", "curl", "-f", "-h",'"guilds:707441352367013899"', "http://localhost:443/guilds" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 5s
  lavalink:
    image: ghcr.io/lavalink-devs/lavalink:4
    container_name: lavalink
    restart: unless-stopped
    env_file: .env
    environment:
      - _JAVA_OPTIONS=-Xmx500M
      - LAVALINK_SERVER_PASSWORD=${LAVALINK_SERVER_PASSWORD}
    ports:
      - 2333:2333
    networks:
      - fridaybot
    volumes:
      - ./lavalink.config.yml:/opt/Lavalink/application.yml
    healthcheck:
      test: 'curl -f -H "Authorization: $$LAVALINK_SERVER_PASSWORD" http://lavalink:2333/version || exit 1'
      timeout: 5s
      retries: 15
      start_period: 5s
  db:
    image: postgres:15.1
    restart: unless-stopped
    container_name: db
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER']
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    networks:
      - fridaybot
    volumes:
      - db:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
  # portainer:
  #   image: portainer/portainer-ce:latest
  #   restart: unless-stopped
  #   security_opt:
  #     - no-new-privileges:true
  #   ports:
  #     - 9000:9000
  #     - 9443:9443
  #   volumes:
  #     - portainer:/data
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     # - pgadmin:/var/run/docker.sock

volumes:
  db:
  # portainer:

networks:
  fridaybot:
    name: fridaybot